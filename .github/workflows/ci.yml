name: Pre-commit and Tests

on:
  push:
    branches:
      - main
      - connect
  pull_request:
    branches:
      - main
      - connect
  schedule:
    - cron: '0 0 * * 1'  # Runs every Monday at midnight

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root

    - name: Run pre-commit hooks
      run: |
        poetry run pre-commit run --all-files

  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.3'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root

    - name: Wait for PostgreSQL to be ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        while ! pg_isready -h localhost -p 5432 -U test_user; do
          sleep 1
        done

    - name: Run Django tests
      env:
        # Django Configuration
        SECRET_KEY: "django-insecure-test-key"
        DEBUG: "True"
        
        # Database Configuration - Fixed to match the PostgreSQL service
        DATABASE_URL: "postgres://test_user:test_password@localhost:5432/test_db"
        
        # Email Configuration
        DEFAULT_FROM_EMAIL: "test@example.com"
        ZEPTOMAIL_API_KEY: "dummy_key"
        
        # SMS Configuration
        TWILIO_ACCOUNT_SID: "dummy_sid"
        TWILIO_AUTH_TOKEN: "dummy_token"
        TWILIO_PHONE_NUMBER: "+15555555555"

        MSG91_AUTH_KEY: "dummy_msg91_key"
        MSG91_TEMPLATE_ID: "dummy_template_id"
        
        # AWS S3 Configuration
        AWS_ACCESS_KEY_ID: "dummy_access_key"
        AWS_SECRET_ACCESS_KEY: "dummy_secret_key"
        AWS_STORAGE_BUCKET_NAME: "dummy_bucket_name"
        AWS_S3_REGION_NAME: "us-east-1"

        CORS_ALLOWED_ORIGINS: "http://localhost:3000"
        
        # Frontend URL
        FRONTEND_URL: "http://localhost:3000"
        
        # Authentication Keys
        MEMBER_LOGIN_KEY: "dummy_member_key"
        MERCHANT_LOGIN_KEY: "dummy_merchant_key"
        MERCHANT_OWNER_LOGIN_KEY: "dummy_owner_key"

        # Cashfree Verification Keys
        CASHFREE_CLIENT_ID: "dummy_client_id"
        CASHFREE_CLIENT_SECRET: "dummy_client_secret"
        CASHFREE_PUBLIC_KEY: "dummy_public_key"

        AADHAAR_API_BASE_URL: "https://aadhaarapi.com/api/v1/"
        AADHAAR_API_KEY: "dummy_aadhaar_key"
        AADHAAR_API_SECRET: "dummy_aadhaar_secret"

        # Firebase Configuration
        FCM_CREDENTIALS: "JSON_STRING"
        FCM_CREDENTIALS_PATH: "/path/to/credentials.json"
      run: |
        poetry run pytest --nomigrations