# Generated by Django 5.1.4 on 2025-06-15 05:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipient_object_id", models.PositiveIntegerField()),
                ("actor_object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "target_object_id",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("comment", "Comment"),
                            ("share", "Share"),
                            ("bookmark", "Bookmark"),
                            ("view", "View"),
                            ("reply", "Reply"),
                            ("follow", "Follow"),
                            ("mention", "Mention"),
                            ("like_milestone", "Like Milestone"),
                            ("share_milestone", "Share Milestone"),
                            ("view_milestone", "View Milestone"),
                            ("bookmark_milestone", "Bookmark Milestone"),
                            ("follower_milestone", "Follower Milestone"),
                            ("verification", "Verification"),
                            ("welcome", "Welcome"),
                            ("system", "System"),
                            ("custom", "Custom"),
                        ],
                        default="system",
                        max_length=50,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "click_url",
                    models.URLField(
                        blank=True,
                        help_text="URL to redirect when notification is clicked",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "deep_link_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Data for mobile app deep linking (screen, params, etc.)",
                    ),
                ),
                (
                    "extra_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional data like milestone numbers, custom params, etc.",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("is_clicked", models.BooleanField(default=False)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("push_sent", models.BooleanField(default=False)),
                ("push_sent_at", models.DateTimeField(blank=True, null=True)),
                ("email_sent", models.BooleanField(default=False)),
                ("email_sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "actor_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications_sent",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "recipient_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications_received",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "target_content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications_about",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=[
                            "recipient_content_type",
                            "recipient_object_id",
                            "-created_at",
                        ],
                        name="connect_not_recipie_4d649a_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "-created_at"],
                        name="connect_not_notific_b9e2a7_idx",
                    ),
                    models.Index(
                        fields=["is_read", "-created_at"],
                        name="connect_not_is_read_89d426_idx",
                    ),
                    models.Index(
                        fields=["actor_content_type", "actor_object_id"],
                        name="connect_not_actor_c_dcba8d_idx",
                    ),
                    models.Index(
                        fields=["target_content_type", "target_object_id"],
                        name="connect_not_target__9d3dc7_idx",
                    ),
                    models.Index(
                        fields=["is_clicked"], name="connect_not_is_clic_754a73_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("profile_object_id", models.PositiveIntegerField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("comment", "Comment"),
                            ("share", "Share"),
                            ("bookmark", "Bookmark"),
                            ("view", "View"),
                            ("reply", "Reply"),
                            ("follow", "Follow"),
                            ("mention", "Mention"),
                            ("like_milestone", "Like Milestone"),
                            ("share_milestone", "Share Milestone"),
                            ("view_milestone", "View Milestone"),
                            ("bookmark_milestone", "Bookmark Milestone"),
                            ("follower_milestone", "Follower Milestone"),
                            ("verification", "Verification"),
                            ("welcome", "Welcome"),
                            ("system", "System"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                    ),
                ),
                ("in_app_enabled", models.BooleanField(default=True)),
                ("push_enabled", models.BooleanField(default=True)),
                ("email_enabled", models.BooleanField(default=True)),
                ("is_enabled", models.BooleanField(default=True)),
                (
                    "custom_thresholds",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Custom milestone numbers [1, 10, 100, 500, 1000]",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile_content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["profile_content_type", "profile_object_id"],
                        name="connect_not_profile_f96e59_idx",
                    ),
                    models.Index(
                        fields=["notification_type"],
                        name="connect_not_notific_ee79bd_idx",
                    ),
                ],
                "unique_together": {
                    ("profile_content_type", "profile_object_id", "notification_type")
                },
            },
        ),
    ]
