# Generated by Django 5.2.3 on 2025-07-29 14:36

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("communities", "0005_alter_communitymembership_role"),
        ("polls", "0012_alter_auratransaction_description_and_more"),
        ("profile", "0004_pseudonymousprofile_total_aura"),
    ]

    operations = [
        migrations.CreateModel(
            name="PollList",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "unique_id",
                    models.CharField(
                        blank=True,
                        help_text="11-character unique identifier for the list",
                        max_length=11,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        help_text="URL-friendly identifier for the list",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="Optional image for the list",
                        null=True,
                        upload_to="poll_lists/images/",
                    ),
                ),
                (
                    "list_type",
                    models.CharField(
                        choices=[("folder", "Folder"), ("list", "Poll List")],
                        default="list",
                        max_length=20,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("unlisted", "Unlisted"),
                            ("private", "Private"),
                        ],
                        default="public",
                        max_length=20,
                    ),
                ),
                (
                    "path",
                    models.CharField(
                        blank=True,
                        help_text="Materialized path for efficient tree queries (e.g., '1/5/12/')",
                        max_length=500,
                    ),
                ),
                ("depth", models.PositiveIntegerField(default=0)),
                ("order", models.PositiveIntegerField(default=0)),
                ("direct_polls_count", models.PositiveIntegerField(default=0)),
                ("total_polls_count", models.PositiveIntegerField(default=0)),
                ("direct_folders_count", models.PositiveIntegerField(default=0)),
                ("total_items_count", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_collaborative", models.BooleanField(default=False)),
                ("max_polls", models.PositiveIntegerField(blank=True, null=True)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("bookmark_count", models.PositiveIntegerField(default=0)),
                ("share_count", models.PositiveIntegerField(default=0)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "community",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poll_lists",
                        to="communities.community",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Parent folder (null for root-level lists)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="polls.polllist",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poll_lists",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PollListCollaborator",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "permission_level",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("add", "Can Add Polls"),
                            ("edit", "Can Edit List"),
                            ("admin", "Full Admin"),
                        ],
                        default="add",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "invited_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_list_invitations",
                        to="profile.pseudonymousprofile",
                    ),
                ),
                (
                    "poll_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborators",
                        to="polls.polllist",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collaborated_lists",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PollListItem",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("order", models.PositiveIntegerField(default=0)),
                ("note", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "added_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="added_poll_items",
                        to="profile.pseudonymousprofile",
                    ),
                ),
                (
                    "poll",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="list_items",
                        to="polls.poll",
                    ),
                ),
                (
                    "poll_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poll_items",
                        to="polls.polllist",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["profile", "-created_at"], name="polls_polll_profile_512785_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["community", "-created_at"],
                name="polls_polll_communi_d9ee02_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["parent", "order"], name="polls_polll_parent__b9ee2f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(fields=["path"], name="polls_polll_path_4a5649_idx"),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["visibility", "-created_at"],
                name="polls_polll_visibil_2f0e6d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["list_type", "-created_at"],
                name="polls_polll_list_ty_1af4ca_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["is_featured", "-created_at"],
                name="polls_polll_is_feat_0c5798_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["community", "parent", "order"],
                name="polls_polll_communi_2053c0_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["is_deleted", "visibility"],
                name="polls_polll_is_dele_336d84_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(
                fields=["unique_id"], name="polls_polll_unique__af1fe9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="polllist",
            index=models.Index(fields=["slug"], name="polls_polll_slug_afdf4b_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="polllist",
            unique_together={("parent", "order")},
        ),
        migrations.AddIndex(
            model_name="polllistcollaborator",
            index=models.Index(
                fields=["poll_list", "permission_level"],
                name="polls_polll_poll_li_a61036_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllistcollaborator",
            index=models.Index(
                fields=["profile", "-created_at"], name="polls_polll_profile_2590e0_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="polllistcollaborator",
            unique_together={("poll_list", "profile")},
        ),
        migrations.AddIndex(
            model_name="polllistitem",
            index=models.Index(
                fields=["poll_list", "order"], name="polls_polll_poll_li_8aa0d6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="polllistitem",
            index=models.Index(
                fields=["poll", "-created_at"], name="polls_polll_poll_id_cd8b46_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="polllistitem",
            index=models.Index(
                fields=["added_by", "-created_at"],
                name="polls_polll_added_b_921641_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="polllistitem",
            index=models.Index(
                fields=["poll_list", "is_deleted", "order"],
                name="polls_polll_poll_li_0996e4_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="polllistitem",
            unique_together={("poll_list", "order"), ("poll_list", "poll")},
        ),
    ]
