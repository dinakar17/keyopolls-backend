# Generated by Django 5.2.3 on 2025-06-30 14:30

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("profile", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard Category"),
                            ("feed", "Feed Type"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("icon_color", models.CharField(blank=True, max_length=20)),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("character_limit", models.PositiveIntegerField(default=2000)),
                ("allows_images", models.BooleanField(default=True)),
                ("allows_gifs", models.BooleanField(default=True)),
                ("allows_videos", models.BooleanField(default=True)),
                ("allows_links", models.BooleanField(default=True)),
                ("allows_polls", models.BooleanField(default=True)),
                ("allows_location", models.BooleanField(default=True)),
                ("max_images", models.PositiveSmallIntegerField(default=4)),
                (
                    "max_video_duration",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("allows_tags", models.BooleanField(default=True)),
                ("max_tags", models.PositiveSmallIntegerField(default=5)),
                ("is_active", models.BooleanField(default=True)),
                ("requires_approval", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="UploadedImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file", models.FileField(upload_to="article_image_uploads/%Y/%m/%d/")),
                ("file_name", models.CharField(max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("content_type", models.CharField(blank=True, max_length=100)),
                ("file_size", models.BigIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Uploaded Image",
                "verbose_name_plural": "Uploaded Images",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BookmarkFolder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6",
                        help_text="Hex color code for folder display",
                        max_length=7,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookmark_folders",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.BigIntegerField()),
                ("notes", models.TextField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookmarks",
                        to="profile.pseudonymousprofile",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bookmarks",
                        to="common.bookmarkfolder",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Impression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("ip_address", models.GenericIPAddressField()),
                ("session_key", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "user_agent_hash",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("referrer", models.URLField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "country_code",
                    models.CharField(
                        blank=True, db_index=True, max_length=2, null=True
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="impressions",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Link",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("url", models.URLField(max_length=2000)),
                ("display_text", models.CharField(blank=True, max_length=2000)),
                ("domain", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(blank=True, max_length=500, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("image_url", models.URLField(blank=True, max_length=2000, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("click_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("gif", "GIF"),
                            ("video", "Video"),
                        ],
                        max_length=10,
                    ),
                ),
                ("file", models.FileField(upload_to="media/%Y/%m/%d/")),
                (
                    "thumbnail",
                    models.FileField(
                        blank=True, null=True, upload_to="media/thumbnails/%Y/%m/%d/"
                    ),
                ),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("size_bytes", models.BigIntegerField(blank=True, null=True)),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("video_codec", models.CharField(blank=True, max_length=50, null=True)),
                ("audio_codec", models.CharField(blank=True, max_length=50, null=True)),
                ("is_processed", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("order", models.PositiveSmallIntegerField(default=0)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Media",
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reaction_type",
                    models.CharField(
                        choices=[("like", "Like"), ("dislike", "Dislike")],
                        default="like",
                        max_length=20,
                    ),
                ),
                ("object_id", models.BigIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Share",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("twitter", "Twitter"),
                            ("facebook", "Facebook"),
                            ("linkedin", "LinkedIn"),
                            ("reddit", "Reddit"),
                            ("email", "Email"),
                            ("link", "Direct Link"),
                            ("embed", "Embed Code"),
                            ("native", "Native Share"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("shared_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="profile.pseudonymousprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-shared_at"],
            },
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("icon_color", models.CharField(blank=True, max_length=20)),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="common.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Sub Categories",
                "ordering": ["category", "display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("usage_count", models.BigIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(fields=["name"], name="common_tag_name_3a4898_idx"),
                    models.Index(
                        fields=["usage_count"], name="common_tag_usage_c_0f4346_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TaggedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="common.tag",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["profile", "name"], name="common_book_profile_ed0743_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["profile", "-created_at"], name="common_book_profile_9fadc7_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmarkfolder",
            constraint=models.UniqueConstraint(
                fields=("profile", "name"), name="unique_folder_name_per_profile"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["profile", "-created_at"], name="common_book_profile_783f00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="common_book_content_51daff_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["folder", "-created_at"], name="common_book_folder__b08da2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["profile", "folder"], name="common_book_profile_a19b72_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmark",
            constraint=models.UniqueConstraint(
                fields=("profile", "content_type", "object_id"),
                name="unique_bookmark_per_profile_per_content",
            ),
        ),
        migrations.AddIndex(
            model_name="impression",
            index=models.Index(
                fields=["content_type", "object_id", "created_at"],
                name="common_impr_content_4b4422_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="impression",
            index=models.Index(
                fields=["ip_address", "created_at"],
                name="common_impr_ip_addr_f69c1b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="impression",
            index=models.Index(
                fields=["profile", "created_at"], name="common_impr_profile_85e88a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="impression",
            index=models.Index(
                fields=["session_key", "created_at"],
                name="common_impr_session_0fe289_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="link",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="common_link_content_04f2c5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="link",
            index=models.Index(fields=["domain"], name="common_link_domain_9ffb4e_idx"),
        ),
        migrations.AddIndex(
            model_name="link",
            index=models.Index(
                fields=["created_at"], name="common_link_created_2553a1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["content_type", "object_id", "media_type"],
                name="common_medi_content_de36e6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="media",
            index=models.Index(
                fields=["created_at"], name="common_medi_created_e79ed4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reaction",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="common_reac_content_2ba241_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reaction",
            index=models.Index(
                fields=["profile", "-created_at"], name="common_reac_profile_d47718_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="reaction",
            index=models.Index(
                fields=["content_type", "object_id", "reaction_type"],
                name="common_reac_content_cd7864_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reaction",
            index=models.Index(
                fields=["reaction_type"], name="common_reac_reactio_c1713a_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="reaction",
            constraint=models.UniqueConstraint(
                fields=("profile", "content_type", "object_id", "reaction_type"),
                name="unique_profile_reaction_per_object",
            ),
        ),
        migrations.AddIndex(
            model_name="share",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="common_shar_content_618509_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="share",
            index=models.Index(
                fields=["profile", "-shared_at"], name="common_shar_profile_d3d7b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="share",
            index=models.Index(
                fields=["platform", "shared_at"], name="common_shar_platfor_9fd53c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="share",
            index=models.Index(
                fields=["ip_address", "platform"], name="common_shar_ip_addr_423d9a_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="share",
            constraint=models.UniqueConstraint(
                condition=models.Q(("profile__isnull", False)),
                fields=("content_type", "object_id", "profile", "platform"),
                name="unique_share_per_authenticated_profile_platform",
            ),
        ),
        migrations.AddConstraint(
            model_name="share",
            constraint=models.UniqueConstraint(
                condition=models.Q(("profile__isnull", True)),
                fields=("content_type", "object_id", "ip_address", "platform"),
                name="unique_share_per_unauthenticated_user_platform",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="subcategory",
            unique_together={("name", "category")},
        ),
        migrations.AddIndex(
            model_name="taggeditem",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="common_tagg_content_d5c4f4_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="taggeditem",
            unique_together={("tag", "content_type", "object_id")},
        ),
    ]
