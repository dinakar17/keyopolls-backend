# Generated by Django 5.2.3 on 2025-07-27 12:47

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0004_taggeditem_community"),
        ("communities", "0005_alter_communitymembership_role"),
        ("profile", "0003_pseudonymousprofile_about"),
    ]

    operations = [
        migrations.CreateModel(
            name="FolderAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("saved", "Saved Public Folder"),
                            ("subscribed", "Paid Subscription"),
                        ],
                        help_text="Type of access: saved public folder or paid subscription",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this access is currently active",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Expiration date for paid subscriptions",
                        null=True,
                    ),
                ),
                (
                    "payment_reference",
                    models.CharField(
                        blank=True,
                        help_text="Payment reference ID for subscriptions",
                        max_length=100,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="bookmark",
            name="is_todo",
            field=models.BooleanField(
                default=False, help_text="If true, this bookmark acts as a todo item"
            ),
        ),
        migrations.AddField(
            model_name="bookmark",
            name="todo_completed",
            field=models.BooleanField(
                default=False,
                help_text="If true, this todo item is marked as completed",
            ),
        ),
        migrations.AddField(
            model_name="bookmark",
            name="todo_due_date",
            field=models.DateTimeField(
                blank=True,
                help_text="Due date for the todo item, if applicable",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="access_level",
            field=models.CharField(
                choices=[
                    ("private", "Private"),
                    ("public", "Public"),
                    ("paid", "Paid"),
                ],
                default="private",
                help_text="Who can access this folder",
                max_length=10,
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="community",
            field=models.ForeignKey(
                blank=True,
                help_text="Community this folder belongs to, if any",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bookmark_folders",
                to="communities.community",
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="content_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Poll", "Poll"),
                    ("GenericComment", "GenericComment"),
                    ("Article", "Article"),
                    ("PollTodo", "PollTodo"),
                ],
                help_text="Content type that this folder contains (e.g., Poll, Comment)",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="folder_id",
            field=models.CharField(
                blank=True,
                help_text="11-character unique identifier for the folder",
                max_length=11,
                unique=True,
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="is_todo_folder",
            field=models.BooleanField(
                default=False, help_text="If true, this folder is used for todo items"
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="price",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Price for paid access (required if access_level is 'paid')",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="bookmarkfolder",
            name="slug",
            field=models.SlugField(
                default="slug",
                help_text="URL-friendly identifier for the folder",
                max_length=100,
                unique=True,
            ),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["folder_id"], name="common_book_folder__5dddab_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(fields=["slug"], name="common_book_slug_c96110_idx"),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["access_level"], name="common_book_access__a7c769_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["access_level", "-created_at"],
                name="common_book_access__5c004f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["content_type"], name="common_book_content_608828_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["profile", "content_type"],
                name="common_book_profile_6933d7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="bookmarkfolder",
            index=models.Index(
                fields=["content_type", "is_todo_folder"],
                name="common_book_content_4b5d5d_idx",
            ),
        ),
        migrations.AddConstraint(
            model_name="bookmarkfolder",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("access_level__in", ["private", "public"]),
                    models.Q(("access_level", "paid"), ("price__isnull", False)),
                    _connector="OR",
                ),
                name="paid_folders_must_have_price",
            ),
        ),
        migrations.AddField(
            model_name="folderaccess",
            name="folder",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="folder_accesses",
                to="common.bookmarkfolder",
            ),
        ),
        migrations.AddField(
            model_name="folderaccess",
            name="profile",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="folder_accesses",
                to="profile.pseudonymousprofile",
            ),
        ),
        migrations.AddIndex(
            model_name="folderaccess",
            index=models.Index(
                fields=["profile", "is_active"], name="common_fold_profile_fb71cf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="folderaccess",
            index=models.Index(
                fields=["folder", "access_type"], name="common_fold_folder__793522_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="folderaccess",
            index=models.Index(
                fields=["profile", "access_type", "is_active"],
                name="common_fold_profile_10e326_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="folderaccess",
            index=models.Index(
                fields=["expires_at"], name="common_fold_expires_b5682e_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="folderaccess",
            constraint=models.UniqueConstraint(
                fields=("profile", "folder", "access_type"),
                name="unique_folder_access_per_profile_per_type",
            ),
        ),
    ]
