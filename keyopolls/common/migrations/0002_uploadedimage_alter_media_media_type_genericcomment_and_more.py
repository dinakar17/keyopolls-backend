# Generated by Django 5.1.4 on 2025-05-21 08:47

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("member", "0013_member_categories"),
        ("profiles", "0005_professionalprofile_completeness_percentage_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="UploadedImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("file", models.FileField(upload_to="article_image_uploads/%Y/%m/%d/")),
                ("file_name", models.CharField(max_length=255)),
                ("alt_text", models.CharField(blank=True, max_length=255, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                ("height", models.IntegerField(blank=True, null=True)),
                ("content_type", models.CharField(blank=True, max_length=100)),
                ("file_size", models.BigIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Uploaded Image",
                "verbose_name_plural": "Uploaded Images",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterField(
            model_name="media",
            name="media_type",
            field=models.CharField(
                choices=[("image", "Image"), ("gif", "GIF"), ("video", "Video")],
                max_length=10,
            ),
        ),
        migrations.CreateModel(
            name="GenericComment",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.TextField(max_length=1000)),
                ("object_id", models.BigIntegerField()),
                (
                    "profile_type",
                    models.CharField(
                        choices=[
                            ("professional", "Professional"),
                            ("public", "Public"),
                            ("pseudonymous", "Pseudonymous"),
                            ("anonymous", "Anonymous"),
                        ],
                        default="public",
                        max_length=15,
                    ),
                ),
                (
                    "anonymous_comment_identifier",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("like_count", models.BigIntegerField(default=0)),
                ("reply_count", models.BigIntegerField(default=0)),
                ("depth", models.SmallIntegerField(default=0)),
                ("allow_link", models.BooleanField(default=True)),
                ("allow_image", models.BooleanField(default=True)),
                ("allow_gif", models.BooleanField(default=True)),
                ("is_flagged", models.BooleanField(default=False)),
                ("flag_reason", models.CharField(blank=True, max_length=100)),
                (
                    "moderation_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                        ],
                        default="approved",
                        max_length=20,
                    ),
                ),
                ("requires_moderation", models.BooleanField(default=False)),
                ("community_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "comment_source",
                    models.CharField(
                        choices=[
                            ("post", "Post Comment"),
                            ("community_post", "Community Post Comment"),
                            ("article", "Article Comment"),
                            ("community_article", "Community Article Comment"),
                        ],
                        default="post",
                        max_length=20,
                    ),
                ),
                ("is_taken_down", models.BooleanField(default=False)),
                ("takedown_reason", models.CharField(blank=True, max_length=100)),
                ("takedown_date", models.DateTimeField(blank=True, null=True)),
                ("auto_takedown", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_edited", models.BooleanField(default=False)),
                (
                    "anonymous_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="profiles.anonymousprofile",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="all_comments",
                        to="member.member",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="common.genericcomment",
                    ),
                ),
                (
                    "professional_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="profiles.professionalprofile",
                    ),
                ),
                (
                    "pseudonymous_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="profiles.pseudonymousprofile",
                    ),
                ),
                (
                    "public_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="profiles.publicprofile",
                    ),
                ),
                (
                    "takedown_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comments_taken_down",
                        to="member.member",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id", "-created_at"],
                        name="common_gene_content_23a69a_idx",
                    ),
                    models.Index(
                        fields=["parent", "-created_at"],
                        name="common_gene_parent__fa5970_idx",
                    ),
                    models.Index(
                        fields=["member", "-created_at"],
                        name="common_gene_member__06fe07_idx",
                    ),
                    models.Index(
                        fields=["profile_type", "-created_at"],
                        name="common_gene_profile_517367_idx",
                    ),
                    models.Index(
                        fields=["professional_profile"],
                        name="common_gene_profess_7c24ba_idx",
                    ),
                    models.Index(
                        fields=["public_profile"], name="common_gene_public__8f622a_idx"
                    ),
                    models.Index(
                        fields=["pseudonymous_profile"],
                        name="common_gene_pseudon_58f3db_idx",
                    ),
                    models.Index(
                        fields=["anonymous_profile"],
                        name="common_gene_anonymo_cf27c4_idx",
                    ),
                    models.Index(
                        fields=["anonymous_comment_identifier"],
                        name="common_gene_anonymo_7d40d3_idx",
                    ),
                    models.Index(
                        fields=["is_flagged", "moderation_status"],
                        name="common_gene_is_flag_812416_idx",
                    ),
                    models.Index(
                        fields=["comment_source", "-created_at"],
                        name="common_gene_comment_72b0f8_idx",
                    ),
                    models.Index(
                        fields=["community_id", "-created_at"],
                        name="common_gene_communi_260b22_idx",
                    ),
                    models.Index(
                        fields=["is_taken_down"], name="common_gene_is_take_7e56c1_idx"
                    ),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            models.Q(
                                ("anonymous_profile__isnull", True),
                                ("professional_profile__isnull", False),
                                ("profile_type", "professional"),
                                ("pseudonymous_profile__isnull", True),
                                ("public_profile__isnull", True),
                            ),
                            models.Q(
                                ("anonymous_profile__isnull", True),
                                ("professional_profile__isnull", True),
                                ("profile_type", "public"),
                                ("pseudonymous_profile__isnull", True),
                                ("public_profile__isnull", False),
                            ),
                            models.Q(
                                ("anonymous_profile__isnull", True),
                                ("professional_profile__isnull", True),
                                ("profile_type", "pseudonymous"),
                                ("pseudonymous_profile__isnull", False),
                                ("public_profile__isnull", True),
                            ),
                            models.Q(
                                ("anonymous_profile__isnull", False),
                                ("professional_profile__isnull", True),
                                ("profile_type", "anonymous"),
                                ("pseudonymous_profile__isnull", True),
                                ("public_profile__isnull", True),
                            ),
                            _connector="OR",
                        ),
                        name="comment_has_exactly_one_profile_type",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Reaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reaction_type",
                    models.CharField(
                        choices=[("like", "Like"), ("dislike", "Dislike")],
                        default="like",
                        max_length=20,
                    ),
                ),
                ("object_id", models.BigIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="member.member",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="common_reac_content_2ba241_idx",
                    ),
                    models.Index(
                        fields=["member", "-created_at"],
                        name="common_reac_member__5336b6_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id", "reaction_type"],
                        name="common_reac_content_cd7864_idx",
                    ),
                    models.Index(
                        fields=["reaction_type"], name="common_reac_reactio_c1713a_idx"
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("member", "content_type", "object_id", "reaction_type"),
                        name="unique_member_reaction_per_object",
                    )
                ],
            },
        ),
    ]
